ability to draw lines in generate mode






Once done, make buttons different colors to make ui more interesting
and easier to read - make backgrounds of each frame different colors
- take a hot minute to read about styles
- (how to center justify text in buttons?)
- buttons - add config option cursor='hand2'
- when animation is running, make backgrounds for fully disabled frames
the default color, but keep frames that still have available controls
keep their new color
- I think that red button was supposed to be a record button. Also,
I'm not actually digging the black borders around the images
- assign a color to each of solve and generate modes, and have the
buttons be those colors, and in each mode have the entire window
change to be like that color - like for green, have the background be
a darker green while the sunken frames are a lighter green, or something
like that


Maybe have a tutorial to introduce the features; this is probably
what anybody looking at this to evaluate me would see first









bind enter key to starting the animation

really should make a* animation cleaner & more similar
to other animations (like with black dots and such); will make huge difference
in how professional it looks - blue instead of red, red instead of green
- just have first circle be the same color as the line below it

Have the colors used to draw traversalLog lines change in a gradient
based on how recently it was found, so the deeper you search
the more of a certain color you get!



fully remove redrawDelay if it ends up staying just at 1 to make code cleaner


Once finished everything, try changing cell indexing scheme to (row, col) and
see if it improves performance





Would there be a way to have the margins of the maze change
if the aspect ratio of each cell does not fall within some
set boundary? Or have them always be squares?
aspect ratio thing is good because if they were always squares,
could end up with some weird spacing, but people like squares
this would not be that much of a problem to add - just
would have to revamp logic in drawMaze - would be cool!
- find max(dims[0], dims[1]) and have the margins be based on which is
the greatest; then determine the dimensions of the cell based on that,
and put other margins based on that


boundary updating when rows and cols are updated by user - would be
a lot easier if boundaries were stored like (row, col)


have another animation speed slider in the animation settings,
but this one shows the time in seconds of the delay
between steps (put under the description for default mode,
have it disable when another value is chosen for the mode)


when clicking and dragging to make boundaries in solve mode,
have default setting be adding or removing based on which
square the user started in - as it is now, it's always adding
when dragging

more on dragging: have a way to circumvent the extra
vertical lines a user might get when they try to
click and drag to create a long horizontal boundary





TO PREVENT LAGGING:
- maybe at the end, measure timings of certain operations,
make some of these changes, and see if they make things better
(like learn how to use python time module)

have different boundary list for left bounds and right bounds? Might
help with lagging? Or try some different data structure instead of set?
- make sure to change what the boundary thing is initialized to
- when the Clear Maze button is pressed

- change redrawDelay based on the size of the boundaries set?
for lagging purposes


ONLY DRAW what needs to be drawn, like just the boundaries

Maybe saving boundaries as row and col pairs would be better, since
they have to be converted back and forth each time a new boundary is added
or drawn onto the canvas


have the colors of the maze be customizable
have a way to save an image of the maze to the filesystem